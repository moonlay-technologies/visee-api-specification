// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/visitor-client/{client_uuid}/count": {
            "get": {
                "description": "Get count visitor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitoring Visitor"
                ],
                "summary": "Get count visitor",
                "operationId": "count-visitor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client uuid",
                        "name": "client_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " data": {
                                            "$ref": "#/definitions/models.VisitorCountResponse"
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/visitor-client/{client_uuid}/count-buyer": {
            "get": {
                "description": "Get number of buyers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitoring Visitor"
                ],
                "summary": "Get number of buyers",
                "operationId": "count-buyers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client uuid",
                        "name": "client_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " data": {
                                            "$ref": "#/definitions/models.VisitorCountResponse"
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/visitor-client/{client_uuid}/count-by-gender": {
            "get": {
                "description": "Get count visitor by gender",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitoring Visitor"
                ],
                "summary": "Get count visitor by gender",
                "operationId": "count-visitor-by-gender",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client uuid",
                        "name": "client_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter time range which 5, 15, 30, and 60",
                        "name": "time_range",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.GetCountByGenderResponse"
                                            }
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BasicResponse": {
            "type": "object",
            "properties": {
                "message": {},
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "models.GenderList": {
            "type": "object",
            "properties": {
                "gender": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "visitor_by_zone": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VisitorByZone"
                    }
                }
            }
        },
        "models.GetCountByGenderResponse": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "gender_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GenderList"
                    }
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {},
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "models.VisitorByZone": {
            "type": "object",
            "properties": {
                "number_of_visitor": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.VisitorCountResponse": {
            "type": "object",
            "properties": {
                "number_of_visitor": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3008",
	BasePath:         "/v1",
	Schemes:          []string{"http"},
	Title:            "Echo Swagger Example API",
	Description:      "This is a sample server server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
